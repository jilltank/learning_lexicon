;,"you end a lot of ""sentences"" with semicolons;"
//,for single-line comments
"""sample"".length",find the length of the string
"confirm(""sample"");",summons a popup message of the quoted string
"prompt(""sample"");",use when you want the user to enter information. Similar to raw_input in Python
"console.log(""sample"")",print function
 ===,equal to
 !==,not equal to
"if(""sample"") {   }",if statement - brackets are on the next line directy beneath the if
else{    },else statement - brackets are on the next line directly beneath the else
else if,elif
debugging,finding the mistakes and fixing them. Sometimes you just have to read.
linter,a program that checks code and will put a red x next to the first line that contains errors
strings + numbers,can be concatenated. Really only two types of data in JavaScript.
%,modulo - great for testing divisibility and/or whether a number is even(divisible by 2)
"""sample"".substring(x, y);","this is how you slice the string. index starts at 0. The last number you write will be the spot just before the slice ends. So if you write 0, 3, then it will take the first second, and third indicies only. If you want to include the last index spot, you just write the first index and leave it at that -- ""sample"".substring(3);"
var sampleName = 'sample',variables. You only have to use the var tag the first time you define it. Kinda. See the note on scope.
"var sampleVar = function(sParameters) { 
sampleEquation  
};",functions - notice the semicolon at the end. Every line of code in a function must end with a semicolon
return,"returns a value !== print, but it will still stop a function. notice -- no parentheses"
scope,"variables inside function = local. Variables outside function = global. Defining a variable without the var keyword makes it refer to the global variable. If you use var keyword inside a function, it declares a new local variable that only exists within the function"
Math.random(),"random function. If you don't put anything in there, it will equal a random number betwixt 0 and 1."
"for (var s = start; s < end.length; s = increment )  { 
console.log(sampleArray(i); 
}",for loop! every one uses a counting variable. first part of the () declares a variable of a value and has the computer start with that value. second part of the () controls where the variable ends. last part of the () is an equation that tells the computer how to add or remove from the original variable. Each part is seperated by a semicolon.
s++,increment the variable s by +1
s--,increment the variable by -1
s += 3,increment the variable by 3
s -= 5,decrement the variable by 5
"var sample = [1, true, 3, 4, ""Star Wars""]","array - a list of data, is ordered so the position of each piece of data is fixed in an index. Ends with a semicolon after the bracket. The indicies inside the bracket are seperated by a comma."
heterogeneous array,"an array with a mixture of data types, ie :   var mix = [42, ""Star Wars"", true];"
"var sampleTwoD = [[1, 1], [1, 1], [1, 1]];",two-dimensional array (arrays inside of a blanket array)
sample[3],slicing the fourth item from the index of an array
\,"a backlash - it makes the string ""wrap"" to the next line, so you don't have superlong lines of code"
sample.push(),adds the thing between the parentheses to the end of the array. useful for writing functions in which you want to build an array.
while(sample === s) { },"while loop! It's similar to a for loop, but it doesn't need a counter because it will only run while a condition inside the parentheses evaluates to true. So it's great for times when you need to use a loop but aren't sure exactly how many times to use it (and don't have a length to go off of)."
while(sample),"shorthand: if you have already set a true variable and will soon make it false, then you can just say the variable's name, because the while statement will automatically evaluate and realize it's true"
  true,boolean for true. 1 is also equal to true
  false,boolean for false. 0 is also equal to false.
"var loopCondition = false; do { 
console.log(""I'm gonna stop looping 'cause my condition is "" + loopCondition + ""!""); 
} while (loopCondition);",do / while loop. Basically says do something one time and then check to see whether this statement evaluates to true.Great for when you need the computer to do something at least once.
sampleOne += sampleTwo,shorthand for the following : sampleOne = sampleOne + sampleTwo
NaN,usually an error message saying that something is not a number
isNaN,"checks whether something is not a number. So: isNaN('sample'); evaluates to true, but isNaN(42); evaluates to false. Careful! If you call it on a string that looks like a number -- isNaN('42') , then JavaScript will correct the string to a number and the evaluate the statement as false because 42 is a number!"
"var sampleVariable = sampleFormula; 
switch(sampleVariable){ 
case 'sampleCase': 
console.log('Sample message.'); 
break; 
default: console.log('Sample default message');  }","switch statement - allows you to preset a number of options called (each one is called a case) then check an expression to see if it matches any of them, and if so, will perform the action for the matching case. If there's no match, it can execute a default option."
logical operators,"used if we want to check more than one variable (and, or, not)"
&&,logical variable -- and
||,logical variable -- or
!,"logical variable -- not -- ""it makes true expressions false and vice versa -- !true equals false and !false equals true"""
sample.toUpperCase();,a function that returns the imput to a string in all caps
sample.toLowerCase();,a built-in function that returns the imput to a string of all lower case letters
jagged arrays,"uneven two-dimensional arrays, for example line one: [ [1, ,1], 3, [45, 5], line two: [3, 4, 5], [6, 7], line three: 8 ]"
multidimensional arrays,arrays inside of arrays (2D) inside of other arrays
"var sample = {} 
sample.name = 'SampleName' 
sample.number = 12
sample.array = [1, 2, 3, 4, 5]
sample.sampleFunction = function() { 
console.log('This is a sample function') 
}","object - stores information and functions in the same place. This is an example of an object written with literal syntax. You can also store an object in an array. You have to first define an object including giving it a name, and then you can simply list that name in the array."
"var sample = {
key: value,  
key: value
}","objects store keys and values. the key is the name placeholder and the value is the data it's actually storing. They're stored in objects between curly braces, like this, and it's called object literal notation."
"var sampleObject = new Object();
sampleObject[""sampleName""] = 'Jill';  
/or/  
sampleObject.sampleName = 'Jill';","object constructor. This tells JS: 'make a new thing, and that new thing is gonna be an object. "
"for (var sample in object) {
   // write what you want the function to do here
}",for/in loop. Basically it's a for loop that will help you do stuff in an object.
javascript library,a database of prewritten javascript code that will hook into what they've already done
webpage: about:blank: inspect: console,javascript console
window,"these are a ton of DOMS (document object model. All elements of whatever you create in your page. Your browser window comes with a bunch of other things that you can tap into.)- if you have questions, go to Mozilla Developer Network (MDN)"
Math.round(34.5),this is a method that rounds values. yay!
"5 + ""dollars""
21+2+""dollars""
""The answer is"" + 21+5
""The answer is"" + (21+5)","So the first two will read as 
""5dollars""
""23dollars""
""The answer is 214""
""The answer is 26""

Look at the third value. Javascript reads left to right, so when it reads the string first, it automatically assumes that everything you're reading is a string. But when you add the parentheses, JavaScript recognizes this as the first order of operations and will mathmatecally convert these first"
"String(456)
Number(""98"")
Number(""54 42"")","output:
""456""
98
NaN --> There's a space here, so it's not a number (that's what NaN stands for)

Fortunately, JavaScript is pretty good at data type conversion, but if you don't want to leave it up to chance, do it yourself"
"var a = 1
var b = ""1""
a == b 
a === b",the first one (with two equals signs) returns true because it's going to convert the data types. Apparently that's what the double = means in JavaScript
"<script type=""text/javascript"" src=""height_to_centimeters.js""></script>
</body>","right at the bottom of the body, this is where you link to the javascript in your html file"
alert(myName + ' is ' + heightCentimeters + ' cm and ' + weightKilograms + ' kg.');,"This will pop up with a box that gives you info, but does not prompt you for anything,"
jQuery Migrate,migrates old components of jQuery onto your site. More info here: https://github.com/jquery/jquery-migrate
jQuery UI,curated widgets and themes built ontop of jQuery https://jqueryui.com/
check your <script tags>,be sure that you don't have the same script file saved for your site. And also that you don't have overlapping files